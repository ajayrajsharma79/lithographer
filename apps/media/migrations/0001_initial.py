# Generated by Django 5.2 on 2025-04-18 07:57

import apps.media.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageOptimizationProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="e.g., 'Thumbnail', 'WebP Medium'", max_length=100, unique=True, verbose_name='Profile Name')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max Width (px)')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max Height (px)')),
                ('format', models.CharField(blank=True, choices=[('JPEG', 'JPEG'), ('PNG', 'PNG'), ('WEBP', 'WebP'), ('AVIF', 'AVIF')], help_text='Leave blank to keep original format.', max_length=10, verbose_name='Output Format')),
                ('quality', models.PositiveIntegerField(blank=True, help_text='Applicable to JPEG, WebP, AVIF. Leave blank for default.', null=True, verbose_name='Quality (1-100)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this profile should be applied automatically.', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Image Optimization Profile',
                'verbose_name_plural': 'Image Optimization Profiles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MediaTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Tag Name')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Media Tag',
                'verbose_name_plural': 'Media Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Folder Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subfolders', to='media.folder', verbose_name='Parent Folder')),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
                'ordering': ['name'],
                'unique_together': {('parent', 'name')},
            },
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, help_text='Internal title or name for the asset.', max_length=255, verbose_name='Title')),
                ('file', models.FileField(max_length=500, upload_to=apps.media.models.get_media_asset_upload_path, verbose_name='File')),
                ('filename', models.CharField(editable=False, max_length=255, verbose_name='Original Filename')),
                ('mime_type', models.CharField(blank=True, editable=False, max_length=100, verbose_name='MIME Type')),
                ('size', models.PositiveIntegerField(editable=False, null=True, verbose_name='File Size (bytes)')),
                ('width', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Width (px)')),
                ('height', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Height (px)')),
                ('alt_text', models.CharField(blank=True, help_text='Text description for accessibility (e.g., for images).', max_length=255, verbose_name='Alt Text')),
                ('caption', models.TextField(blank=True, verbose_name='Caption')),
                ('custom_metadata', models.JSONField(blank=True, default=dict, help_text='Arbitrary key-value pairs for additional metadata.', verbose_name='Custom Metadata')),
                ('upload_timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('optimized_versions', models.JSONField(blank=True, default=dict, editable=False, help_text="Stores URLs/paths to different optimized versions (e.g., {'thumbnail': '...', 'webp': '...'}).", verbose_name='Optimized Versions')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assets', to='media.folder', verbose_name='Folder')),
                ('uploader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_media_assets', to=settings.AUTH_USER_MODEL, verbose_name='Uploader')),
                ('tags', models.ManyToManyField(blank=True, related_name='assets', to='media.mediatag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Media Asset',
                'verbose_name_plural': 'Media Assets',
                'ordering': ['-upload_timestamp'],
            },
        ),
    ]
